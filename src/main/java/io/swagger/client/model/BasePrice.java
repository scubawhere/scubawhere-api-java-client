/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.LocalDate;


/**
 * BasePrice
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-08T09:39:43.225Z")
public class BasePrice   {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("owner_id")
  private Long ownerId = null;

  @SerializedName("owner_type")
  private String ownerType = null;

  @SerializedName("price")
  private Long price = null;

  @SerializedName("from")
  private LocalDate from = null;

  @SerializedName("until")
  private LocalDate until = null;

  @SerializedName("decimal_price")
  private Long decimalPrice = null;

  public BasePrice id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public BasePrice ownerId(Long ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Get ownerId
   * @return ownerId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Long ownerId) {
    this.ownerId = ownerId;
  }

  public BasePrice ownerType(String ownerType) {
    this.ownerType = ownerType;
    return this;
  }

   /**
   * Get ownerType
   * @return ownerType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getOwnerType() {
    return ownerType;
  }

  public void setOwnerType(String ownerType) {
    this.ownerType = ownerType;
  }

  public BasePrice price(Long price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getPrice() {
    return price;
  }

  public void setPrice(Long price) {
    this.price = price;
  }

  public BasePrice from(LocalDate from) {
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getFrom() {
    return from;
  }

  public void setFrom(LocalDate from) {
    this.from = from;
  }

  public BasePrice until(LocalDate until) {
    this.until = until;
    return this;
  }

   /**
   * Get until
   * @return until
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getUntil() {
    return until;
  }

  public void setUntil(LocalDate until) {
    this.until = until;
  }

  public BasePrice decimalPrice(Long decimalPrice) {
    this.decimalPrice = decimalPrice;
    return this;
  }

   /**
   * Get decimalPrice
   * @return decimalPrice
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getDecimalPrice() {
    return decimalPrice;
  }

  public void setDecimalPrice(Long decimalPrice) {
    this.decimalPrice = decimalPrice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BasePrice basePrice = (BasePrice) o;
    return Objects.equals(this.id, basePrice.id) &&
        Objects.equals(this.ownerId, basePrice.ownerId) &&
        Objects.equals(this.ownerType, basePrice.ownerType) &&
        Objects.equals(this.price, basePrice.price) &&
        Objects.equals(this.from, basePrice.from) &&
        Objects.equals(this.until, basePrice.until) &&
        Objects.equals(this.decimalPrice, basePrice.decimalPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ownerId, ownerType, price, from, until, decimalPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BasePrice {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    ownerType: ").append(toIndentedString(ownerType)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    until: ").append(toIndentedString(until)).append("\n");
    sb.append("    decimalPrice: ").append(toIndentedString(decimalPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

