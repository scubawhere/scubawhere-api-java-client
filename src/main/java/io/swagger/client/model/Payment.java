/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Currency;
import io.swagger.client.model.PaymentGateway;
import org.joda.time.LocalDate;


/**
 * Payment
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-08T09:39:43.225Z")
public class Payment   {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("booking_id")
  private Long bookingId = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("currency_id")
  private Long currencyId = null;

  @SerializedName("payment_gateway_id")
  private Long paymentGatewayId = null;

  @SerializedName("received_at")
  private LocalDate receivedAt = null;

  @SerializedName("payment_gateway")
  private PaymentGateway paymentGateway = null;

  @SerializedName("currency")
  private Currency currency = null;

  public Payment id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Payment bookingId(Long bookingId) {
    this.bookingId = bookingId;
    return this;
  }

   /**
   * Get bookingId
   * @return bookingId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getBookingId() {
    return bookingId;
  }

  public void setBookingId(Long bookingId) {
    this.bookingId = bookingId;
  }

  public Payment amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public Payment currencyId(Long currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }

  public Payment paymentGatewayId(Long paymentGatewayId) {
    this.paymentGatewayId = paymentGatewayId;
    return this;
  }

   /**
   * Get paymentGatewayId
   * @return paymentGatewayId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getPaymentGatewayId() {
    return paymentGatewayId;
  }

  public void setPaymentGatewayId(Long paymentGatewayId) {
    this.paymentGatewayId = paymentGatewayId;
  }

  public Payment receivedAt(LocalDate receivedAt) {
    this.receivedAt = receivedAt;
    return this;
  }

   /**
   * Get receivedAt
   * @return receivedAt
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getReceivedAt() {
    return receivedAt;
  }

  public void setReceivedAt(LocalDate receivedAt) {
    this.receivedAt = receivedAt;
  }

  public Payment paymentGateway(PaymentGateway paymentGateway) {
    this.paymentGateway = paymentGateway;
    return this;
  }

   /**
   * Get paymentGateway
   * @return paymentGateway
  **/
  @ApiModelProperty(example = "null", value = "")
  public PaymentGateway getPaymentGateway() {
    return paymentGateway;
  }

  public void setPaymentGateway(PaymentGateway paymentGateway) {
    this.paymentGateway = paymentGateway;
  }

  public Payment currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(example = "null", value = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payment payment = (Payment) o;
    return Objects.equals(this.id, payment.id) &&
        Objects.equals(this.bookingId, payment.bookingId) &&
        Objects.equals(this.amount, payment.amount) &&
        Objects.equals(this.currencyId, payment.currencyId) &&
        Objects.equals(this.paymentGatewayId, payment.paymentGatewayId) &&
        Objects.equals(this.receivedAt, payment.receivedAt) &&
        Objects.equals(this.paymentGateway, payment.paymentGateway) &&
        Objects.equals(this.currency, payment.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bookingId, amount, currencyId, paymentGatewayId, receivedAt, paymentGateway, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bookingId: ").append(toIndentedString(bookingId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    paymentGatewayId: ").append(toIndentedString(paymentGatewayId)).append("\n");
    sb.append("    receivedAt: ").append(toIndentedString(receivedAt)).append("\n");
    sb.append("    paymentGateway: ").append(toIndentedString(paymentGateway)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

