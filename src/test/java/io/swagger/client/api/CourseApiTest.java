/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ErrorModel;
import io.swagger.client.model.InlineResponse20027;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse20028;
import io.swagger.client.model.Course;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CourseApi
 */
public class CourseApiTest {

    private final CourseApi api = new CourseApi();

    
    /**
     * Create a new course
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCourseTest() throws ApiException {
        String name = null;
        String description = null;
        Integer capacity = null;
        List<Double> prices = null;
        Integer certificateId = null;
        List<Long> tickets = null;
        List<Long> trainings = null;
        // InlineResponse20027 response = api.createCourse(name, description, capacity, prices, certificateId, tickets, trainings);

        // TODO: test validations
    }
    
    /**
     * Delete a course by ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCourseTest() throws ApiException {
        Long id = null;
        // InlineResponse2003 response = api.deleteCourse(id);

        // TODO: test validations
    }
    
    /**
     * Update a course by ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editCourseTest() throws ApiException {
        Long id = null;
        String name = null;
        String description = null;
        Integer capacity = null;
        Integer certificateId = null;
        List<Long> tickets = null;
        List<Long> trainings = null;
        // InlineResponse20028 response = api.editCourse(id, name, description, capacity, certificateId, tickets, trainings);

        // TODO: test validations
    }
    
    /**
     * Retrieve all courses including any deleted models
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllCoursesTest() throws ApiException {
        // List<Course> response = api.getAllCourses();

        // TODO: test validations
    }
    
    /**
     * Retrieve all courses including any deleted models
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllWithTrashedCoursesTest() throws ApiException {
        // List<Course> response = api.getAllWithTrashedCourses();

        // TODO: test validations
    }
    
    /**
     * Retrieve a course by ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCourseTest() throws ApiException {
        Long id = null;
        // InlineResponse20027 response = api.getCourse(id);

        // TODO: test validations
    }
    
}
