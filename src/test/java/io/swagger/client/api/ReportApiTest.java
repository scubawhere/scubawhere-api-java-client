/**
 * Scubawhere API Documentation
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse20040;
import io.swagger.client.model.ErrorModel;
import org.joda.time.LocalDate;
import io.swagger.client.model.InlineResponse20041;
import io.swagger.client.model.InlineResponse20042;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportApi
 */
public class ReportApiTest {

    private final ReportApi api = new ReportApi();

    
    /**
     * Get a report containing the distribution of revenue made from all the tickets, packages, courses, addons, accommodations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRevenueStreamReportTest() throws ApiException {
        LocalDate after = null;
        LocalDate before = null;
        // InlineResponse20040 response = api.getRevenueStreamReport(after, before);

        // TODO: test validations
    }
    
    /**
     * Get a report about the distribution of revenue between the diffrent source of bookings
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSourcesReportTest() throws ApiException {
        LocalDate after = null;
        LocalDate before = null;
        // InlineResponse20041 response = api.getSourcesReport(after, before);

        // TODO: test validations
    }
    
    /**
     * Get a report containing the utilisation of all classes between the specified dates
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrainingUtilisationReportTest() throws ApiException {
        LocalDate after = null;
        LocalDate before = null;
        // InlineResponse20042 response = api.getTrainingUtilisationReport(after, before);

        // TODO: test validations
    }
    
    /**
     * Get a report containing the utilisation of all trips between the specified dates
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUtilisationReportTest() throws ApiException {
        LocalDate after = null;
        LocalDate before = null;
        // InlineResponse20042 response = api.getUtilisationReport(after, before);

        // TODO: test validations
    }
    
}
